F=QQ;
T.<x,y,z>=PolynomialRing(F);
R.<u>=PolynomialRing(QQbar);

Q1 = x^2 - 3*y^2 - 2*z^2;
Q2 = x^2 + 4*y^2 - 3*z^2;
Q3 = -4*x^2 - 5*y^2;

Delta = Q1*Q3 - Q2^2;

print(Delta);

h = 1
quartic = Delta(u, h, 0);

print(quartic);
print(Delta(u, -1*h, 0));

root = list(map(lambda x: x[0], quartic.roots()));

M = Matrix([[root[0], h, sqrt(Q1(root[0], h, 0)), sqrt(Q3(root[0], h, 0))],
            [root[1], h, sqrt(Q1(root[1], h, 0)), sqrt(Q3(root[1], h, 0))],
            [root[2], h, sqrt(Q1(root[2], h, 0)), sqrt(Q3(root[2], h, 0))],
            [root[3], h, sqrt(Q1(root[3], h, 0)), sqrt(Q3(root[3], h, 0))]]);

print(M)
M.determinant()

-------------
To nice to be true:

F=QQ;
T.<x,y,z>=PolynomialRing(F);
R.<u>=PolynomialRing(QQbar);

Q1 = x^2 - 2*x*y - y^2 - 2*x*z + 2*y*z - z^2;
Q2 = -17/2*x^2 + 16*x*y + 7*y^2 + 15*x*z - 15*y*z - 17/2*z^2;
Q3 = -60*x^2 + 34*x*y - 33*y^2 - 108*y*z - 52*z^2;

Delta = Q1*Q3 - Q2^2;

print(Delta);

h = 1
quartic = Delta(u, h, 0);

print(quartic);
print(Delta(u, -1*h, 0));

root = list(map(lambda x: x[0], quartic.roots()));

M = Matrix([[root[0], h, sqrt(Q1(root[0], h, 0)), sqrt(Q3(root[0], h, 0))],
            [root[1], h, sqrt(Q1(root[1], h, 0)), sqrt(Q3(root[1], h, 0))],
            [root[2], h, sqrt(Q1(root[2], h, 0)), sqrt(Q3(root[2], h, 0))],
            [root[3], h, sqrt(Q1(root[3], h, 0)), sqrt(Q3(root[3], h, 0))]]);

print(M)
M.determinant()

-----------------

Q1 := -2*x^2 + 6*x*y - 3*y^2 - 7*y*z - 40*z^2;
Q2 := -4*x^2 + 2*x*y - 3*y^2 + 10*y*z + 46*z^2;
Q3 := -2*x^2 + 2*x*y - y^2 + 6*y*z - 47*z^2;

---
Q1 = x^2 + 0*x*y + y^2;
Q2 = x^2 + 0*x*y + y^2;
Q3 = 2*x^2 - 2*x*y + 3*y^2;